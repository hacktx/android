/*
 * Copyright 2017 HackTX.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        // The Fabric Gradle plugin uses an open ended version to
        // react quickly to Android tooling updates
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    jcenter()
    maven { url 'https://maven.fabric.io/public' }
    flatDir {
        dirs 'libs'
    }
}

Properties props = new Properties()
try {
    props.load(file('private.properties').newDataInputStream())
} catch (Exception ex) {
    throw new Exception("Missing private.properties, check the example.properties file.");
}

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"

    defaultConfig {
        applicationId "com.hacktx.android"
        minSdkVersion 17
        targetSdkVersion 26
        versionCode 4
        versionName "1.0.3"

        buildConfigField "String", "TWITTER_KEY", "\"${props.getProperty('TWITTER_KEY')}\""
        buildConfigField "String", "TWITTER_SECRET", "\"${props.getProperty('TWITTER_SECRET')}\""

        manifestPlaceholders = [ googleMapsApiKey : "${props.getProperty('GOOGLE_MAPS_KEY')}"]
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
        }
    }
    flavorDimensions "default"
    productFlavors {
        production {
            dimension "default"
        }
        dev {
            dimension "default"
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.android.support:design:26.1.0'
    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support:cardview-v7:26.1.0'
    compile 'com.android.support:recyclerview-v7:26.1.0'
    compile 'com.android.support:palette-v7:26.1.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    compile 'com.google.firebase:firebase-core:11.4.2'
    compile 'com.google.firebase:firebase-analytics:11.4.2'
    compile 'com.google.firebase:firebase-messaging:11.4.2'
    compile 'com.google.firebase:firebase-config:11.4.2'

    compile 'com.google.android.gms:play-services-maps:11.4.2'

    compile 'com.google.zxing:core:3.0.0'

    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.4.0'
    compile 'com.squareup.okhttp:okhttp:2.4.0'

    compile('com.crashlytics.sdk.android:crashlytics:2.6.2@aar') {
        transitive = true;
    }
    compile('com.twitter.sdk.android:twitter:2.0.0@aar') {
        transitive = true;
    }
}
apply plugin: 'com.google.gms.google-services'